{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\dshield\\\\dhsiled-system\\\\command-center\\\\src\\\\components\\\\StadiumDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, PerspectiveCamera, Environment } from '@react-three/drei';\nimport * as THREE from 'three';\n\n// Stadium 3D Model Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StadiumModel({\n  gridStates\n}) {\n  _s();\n  const groupRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: groupRef,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, -2, 0],\n      receiveShadow: true,\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: [100, 100, 1, 64]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"#2a5934\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), Object.entries(gridStates).map(([gridId, state]) => {\n      var _state$location, _state$crowd_density;\n      const pos = ((_state$location = state.location) === null || _state$location === void 0 ? void 0 : _state$location.position) || {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      const densityLevel = ((_state$crowd_density = state.crowd_density) === null || _state$crowd_density === void 0 ? void 0 : _state$crowd_density.level) || 'normal';\n\n      // Color based on density\n      const colors = {\n        low: '#4ade80',\n        normal: '#fbbf24',\n        moderate: '#fb923c',\n        high: '#f87171',\n        critical: '#dc2626'\n      };\n      const color = colors[densityLevel] || colors.normal;\n      const height = Math.max(2, (state.people_count || 0) / 10);\n      return /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: [pos.x, pos.y + height / 2, pos.z],\n        castShadow: true,\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          args: [25, height, 30]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: color,\n          transparent: true,\n          opacity: 0.7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, gridId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Dashboard Component\n_s(StadiumModel, \"PnfuaQLrpH5YTV5484E1LZLgA0Q=\");\n_c = StadiumModel;\nexport default function StadiumDashboard({\n  gridStates\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full relative\",\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        position: [0, 100, 150]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        enableDamping: true,\n        dampingFactor: 0.05,\n        minDistance: 50,\n        maxDistance: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [50, 100, 50],\n        intensity: 1,\n        castShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hemisphereLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StadiumModel, {\n        gridStates: gridStates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"night\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 bg-gray-800 bg-opacity-90 rounded-lg p-4 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold mb-2\",\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-300\",\n        children: \"\\uD83D\\uDDB1\\uFE0F Left Click + Drag: Rotate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-300\",\n        children: \"\\uD83D\\uDDB1\\uFE0F Right Click + Drag: Pan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-300\",\n        children: \"\\uD83D\\uDDB1\\uFE0F Scroll: Zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c2 = StadiumDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StadiumModel\");\n$RefreshReg$(_c2, \"StadiumDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Canvas","OrbitControls","PerspectiveCamera","Environment","THREE","jsxDEV","_jsxDEV","StadiumModel","gridStates","_s","groupRef","ref","children","position","receiveShadow","args","fileName","_jsxFileName","lineNumber","columnNumber","color","Object","entries","map","gridId","state","_state$location","_state$crowd_density","pos","location","x","y","z","densityLevel","crowd_density","level","colors","low","normal","moderate","high","critical","height","Math","max","people_count","castShadow","transparent","opacity","_c","StadiumDashboard","className","shadows","makeDefault","enableDamping","dampingFactor","minDistance","maxDistance","intensity","preset","_c2","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/dshield/dhsiled-system/command-center/src/components/StadiumDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, PerspectiveCamera, Environment } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\n// Stadium 3D Model Component\r\nfunction StadiumModel({ gridStates }) {\r\n  const groupRef = useRef();\r\n\r\n  return (\r\n    <group ref={groupRef}>\r\n      {/* Stadium base structure */}\r\n      <mesh position={[0, -2, 0]} receiveShadow>\r\n        <cylinderGeometry args={[100, 100, 1, 64]} />\r\n        <meshStandardMaterial color=\"#2a5934\" />\r\n      </mesh>\r\n\r\n      {/* Grid zones */}\r\n      {Object.entries(gridStates).map(([gridId, state]) => {\r\n        const pos = state.location?.position || { x: 0, y: 0, z: 0 };\r\n        const densityLevel = state.crowd_density?.level || 'normal';\r\n        \r\n        // Color based on density\r\n        const colors = {\r\n          low: '#4ade80',\r\n          normal: '#fbbf24',\r\n          moderate: '#fb923c',\r\n          high: '#f87171',\r\n          critical: '#dc2626'\r\n        };\r\n        \r\n        const color = colors[densityLevel] || colors.normal;\r\n        const height = Math.max(2, (state.people_count || 0) / 10);\r\n\r\n        return (\r\n          <mesh \r\n            key={gridId} \r\n            position={[pos.x, pos.y + height/2, pos.z]}\r\n            castShadow\r\n          >\r\n            <boxGeometry args={[25, height, 30]} />\r\n            <meshStandardMaterial \r\n              color={color}\r\n              transparent\r\n              opacity={0.7}\r\n            />\r\n          </mesh>\r\n        );\r\n      })}\r\n    </group>\r\n  );\r\n}\r\n\r\n// Main Dashboard Component\r\nexport default function StadiumDashboard({ gridStates }) {\r\n  return (\r\n    <div className=\"w-full h-full relative\">\r\n      <Canvas shadows>\r\n        <PerspectiveCamera makeDefault position={[0, 100, 150]} />\r\n        <OrbitControls \r\n          enableDamping\r\n          dampingFactor={0.05}\r\n          minDistance={50}\r\n          maxDistance={300}\r\n        />\r\n        \r\n        {/* Lighting */}\r\n        <ambientLight intensity={0.5} />\r\n        <directionalLight \r\n          position={[50, 100, 50]} \r\n          intensity={1}\r\n          castShadow\r\n        />\r\n        <hemisphereLight intensity={0.5} />\r\n\r\n        {/* Stadium Model */}\r\n        <StadiumModel gridStates={gridStates} />\r\n\r\n        {/* Environment */}\r\n        <Environment preset=\"night\" />\r\n      </Canvas>\r\n\r\n      {/* Overlay Info */}\r\n      <div className=\"absolute top-4 left-4 bg-gray-800 bg-opacity-90 rounded-lg p-4 text-white\">\r\n        <h3 className=\"font-bold mb-2\">Controls</h3>\r\n        <p className=\"text-sm text-gray-300\">🖱️ Left Click + Drag: Rotate</p>\r\n        <p className=\"text-sm text-gray-300\">🖱️ Right Click + Drag: Pan</p>\r\n        <p className=\"text-sm text-gray-300\">🖱️ Scroll: Zoom</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}